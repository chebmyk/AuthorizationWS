package com.mika.soap.service.authorization;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2018-10-11T17:41:29.304+03:00
 * Generated source version: 3.2.6
 *
 */
@WebService(targetNamespace = "http://authorization.service.soap.mika.com/", name = "AuthorizationService")
@XmlSeeAlso({ObjectFactory.class})
public interface AuthorizationService {

    @WebMethod(action = "urn:canDelete")
    @RequestWrapper(localName = "canDelete", targetNamespace = "http://authorization.service.soap.mika.com/", className = "com.mika.soap.service.authorization.CanDelete")
    @ResponseWrapper(localName = "CanDeleteResponse", targetNamespace = "http://authorization.service.soap.mika.com/", className = "com.mika.soap.service.authorization.CanDeleteResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean canDelete(
        @WebParam(name = "role", targetNamespace = "")
        java.lang.String role,
        @WebParam(name = "entity", targetNamespace = "")
        java.lang.String entity
    );

    @WebMethod(action = "urn:canWrite")
    @RequestWrapper(localName = "canWrite", targetNamespace = "http://authorization.service.soap.mika.com/", className = "com.mika.soap.service.authorization.CanWrite")
    @ResponseWrapper(localName = "CanWriteResponse", targetNamespace = "http://authorization.service.soap.mika.com/", className = "com.mika.soap.service.authorization.CanWriteResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean canWrite(
        @WebParam(name = "role", targetNamespace = "")
        java.lang.String role,
        @WebParam(name = "entity", targetNamespace = "")
        java.lang.String entity
    );

    @WebMethod(action = "urn:getAccessByRole")
    @RequestWrapper(localName = "getAccessByRole", targetNamespace = "http://authorization.service.soap.mika.com/", className = "com.mika.soap.service.authorization.GetAccessByRole")
    @ResponseWrapper(localName = "GetAccessByRoleResponse", targetNamespace = "http://authorization.service.soap.mika.com/", className = "com.mika.soap.service.authorization.GetAccessByRoleResponse")
    @WebResult(name = "AuthObject", targetNamespace = "")
    public com.mika.soap.service.authorization.AuthObject getAccessByRole(
        @WebParam(name = "role", targetNamespace = "")
        java.lang.String role
    ) throws ResourceNotFoundException;

    @WebMethod(action = "urn:canRead")
    @RequestWrapper(localName = "canRead", targetNamespace = "http://authorization.service.soap.mika.com/", className = "com.mika.soap.service.authorization.CanRead")
    @ResponseWrapper(localName = "CanReadResponse", targetNamespace = "http://authorization.service.soap.mika.com/", className = "com.mika.soap.service.authorization.CanReadResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean canRead(
        @WebParam(name = "role", targetNamespace = "")
        java.lang.String role,
        @WebParam(name = "entity", targetNamespace = "")
        java.lang.String entity
    );

    @WebMethod(action = "urn:hasAccess")
    @RequestWrapper(localName = "hasAccess", targetNamespace = "http://authorization.service.soap.mika.com/", className = "com.mika.soap.service.authorization.HasAccess")
    @ResponseWrapper(localName = "HasAccessResponse", targetNamespace = "http://authorization.service.soap.mika.com/", className = "com.mika.soap.service.authorization.HasAccessResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean hasAccess(
        @WebParam(name = "role", targetNamespace = "")
        java.lang.String role,
        @WebParam(name = "entity", targetNamespace = "")
        java.lang.String entity,
        @WebParam(name = "action", targetNamespace = "")
        com.mika.soap.service.authorization.Access action
    );
}
